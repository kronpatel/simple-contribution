name: JSON Validator Bot

on:
  pull_request_target:
    paths:
      - "cardDetails.json"

permissions:
  contents: read
  pull-requests: write

jobs:
  validate-json:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout PR HEAD
        uses: actions/checkout@v4
        with:
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          ref: ${{ github.event.pull_request.head.ref }}
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Run JSON validator
        id: validator
        run: |
          set +e
          python validator.py cardDetails.json > result.log 2>&1
          echo "exit_code=$?" >> $GITHUB_OUTPUT
          set -e

      - name: Post validation comment (Fail)
        if: steps.validator.outputs.exit_code != '0'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require("fs");
            const errors = fs.readFileSync("result.log", "utf8");
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: "ðŸš¨ **JSON Validation Failed**\n\n```\n" + errors + "\n```"
            });

      - name: Post validation comment (Pass)
        if: steps.validator.outputs.exit_code == '0'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require("fs");
            const success = fs.readFileSync("result.log", "utf8");
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: "âœ… **JSON Validation Passed!** ðŸŽ‰\n\n```\n" + success + "\n```"
            });

      - name: Fail job if validation failed
        if: steps.validator.outputs.exit_code != '0'
        run: exit 1